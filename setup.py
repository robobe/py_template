import os
import subprocess

from setuptools import find_packages, setup

REQUIREMENTS = ['structlog']
DEV_REQUIREMENTS = ["mkdocs", "mkdocs-material", "flake8", "mypy", "black", "isort"]
TEST_REQUIREMENTS = ["pytest"]


def handle_version() -> str:
    """
    Get tag name from git using git describe
    Update version.py file with __version__ variable
    if no git tag set default version to 0.0.0
    """
    version_py = os.path.join(os.path.dirname(__file__), 'version.py')
    try:
        version_git = subprocess.check_output(["git", "describe"]).rstrip().decode("utf-8")
        version_msg = "# Do not edit this file, pipeline versioning is governed by git tags"
    except Exception:
        version_git = "0.0.0"
        version_msg = "# missing tag in git branch, create one and run again"
    with open(version_py, 'w') as fh:
        fh.write(version_msg + os.linesep)
        fh.write(f"__version__ = \"{version_git}\"")
    return version_git


version = handle_version()
with open('README.md', 'r') as fh:
    long_description = fh.read()
setup(
    name='py_template',
    version="{ver}".format(ver=version),
    description='Your project description here',
    long_description=long_description,
    packages=find_packages(include=['py_template', 'py_template.*']),
    install_requires=REQUIREMENTS,
    extras_require={"dev": DEV_REQUIREMENTS, "test": TEST_REQUIREMENTS},
    entry_points={'console_scripts': ['my-command=py_template.example:main']},
)
